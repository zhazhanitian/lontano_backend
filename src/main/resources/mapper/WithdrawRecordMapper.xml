<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.pledge.envconsole.book.mapper.WithdrawRecordMapper">
  <resultMap id="BaseResultMap" type="cn.pledge.envconsole.book.entity.WithdrawRecord">
    <!--@mbg.generated-->
    <!--@Table withdraw_record-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="play_hash" jdbcType="VARCHAR" property="playHash" />
    <result column="play_time" jdbcType="TIMESTAMP" property="playTime" />
    <result column="withdrew_type" jdbcType="VARCHAR" property="withdrewType" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_address" jdbcType="VARCHAR" property="userAddress" />
    <result column="pledge_record_id" jdbcType="INTEGER" property="pledgeRecordId" />
    <result column="virtual_amount" jdbcType="DOUBLE" property="virtualAmount" />
    <result column="currency_type" jdbcType="VARCHAR" property="currencyType" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, amount, apply_time, `status`, play_hash, play_time, withdrew_type, user_id, user_address, 
    pledge_record_id, virtual_amount, currency_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from withdraw_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from withdraw_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.pledge.envconsole.book.entity.WithdrawRecord" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into withdraw_record (amount, apply_time, `status`, 
      play_hash, play_time, withdrew_type, 
      user_id, user_address, pledge_record_id, 
      virtual_amount, currency_type)
    values (#{amount,jdbcType=DOUBLE}, #{applyTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{playHash,jdbcType=VARCHAR}, #{playTime,jdbcType=TIMESTAMP}, #{withdrewType,jdbcType=VARCHAR}, 
      #{userId,jdbcType=INTEGER}, #{userAddress,jdbcType=VARCHAR}, #{pledgeRecordId,jdbcType=INTEGER}, 
      #{virtualAmount,jdbcType=DOUBLE}, #{currencyType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.pledge.envconsole.book.entity.WithdrawRecord" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into withdraw_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="amount != null">
        amount,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="playHash != null">
        play_hash,
      </if>
      <if test="playTime != null">
        play_time,
      </if>
      <if test="withdrewType != null">
        withdrew_type,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userAddress != null">
        user_address,
      </if>
      <if test="pledgeRecordId != null">
        pledge_record_id,
      </if>
      <if test="virtualAmount != null">
        virtual_amount,
      </if>
      <if test="currencyType != null">
        currency_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="playHash != null">
        #{playHash,jdbcType=VARCHAR},
      </if>
      <if test="playTime != null">
        #{playTime,jdbcType=TIMESTAMP},
      </if>
      <if test="withdrewType != null">
        #{withdrewType,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userAddress != null">
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="pledgeRecordId != null">
        #{pledgeRecordId,jdbcType=INTEGER},
      </if>
      <if test="virtualAmount != null">
        #{virtualAmount,jdbcType=DOUBLE},
      </if>
      <if test="currencyType != null">
        #{currencyType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.pledge.envconsole.book.entity.WithdrawRecord">
    <!--@mbg.generated-->
    update withdraw_record
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="applyTime != null">
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="playHash != null">
        play_hash = #{playHash,jdbcType=VARCHAR},
      </if>
      <if test="playTime != null">
        play_time = #{playTime,jdbcType=TIMESTAMP},
      </if>
      <if test="withdrewType != null">
        withdrew_type = #{withdrewType,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userAddress != null">
        user_address = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="pledgeRecordId != null">
        pledge_record_id = #{pledgeRecordId,jdbcType=INTEGER},
      </if>
      <if test="virtualAmount != null">
        virtual_amount = #{virtualAmount,jdbcType=DOUBLE},
      </if>
      <if test="currencyType != null">
        currency_type = #{currencyType,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.pledge.envconsole.book.entity.WithdrawRecord">
    <!--@mbg.generated-->
    update withdraw_record
    set amount = #{amount,jdbcType=DOUBLE},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=VARCHAR},
      play_hash = #{playHash,jdbcType=VARCHAR},
      play_time = #{playTime,jdbcType=TIMESTAMP},
      withdrew_type = #{withdrewType,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      user_address = #{userAddress,jdbcType=VARCHAR},
      pledge_record_id = #{pledgeRecordId,jdbcType=INTEGER},
      virtual_amount = #{virtualAmount,jdbcType=DOUBLE},
      currency_type = #{currencyType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectWithdrawRecordList" resultType="cn.pledge.envconsole.book.entity.WithdrawRecord">
  select * from withdraw_record
  left join user
  on user.id = user_id
  where
  user_id = #{userId}
  <if test="playHash != null">
     and  play_hash = #{playHash}
  </if>
  <if test="remark != null">
     and  remark like CONCAT('%', #{remark}, '%')
  </if>
  order by withdraw_record.id desc
  limit #{page},#{size}
</select>
<select id="withdrawRecordTotal" resultType="java.lang.Integer">
  select count(1) from withdraw_record
  left join user
  on user.id = withdraw_record.user_id
  where user_id = #{userId}
  <if test="playHash != null">
     and  pplay_hash = #{playHash}
  </if>
  <if test="remark != null">
     and  remark like CONCAT('%', #{remark}, '%')
  </if>

</select>
<select id="manageSelectWithdrawRecordList" resultType="cn.pledge.envconsole.book.entity.WithdrawRecord">
  select * from withdraw_record
  left join user
  on user.id = user_id
  where 1=1
  <if test="ids != null">
     and  user_id in
      <foreach close=")" collection="ids" item="id" open="(" separator=",">
            #{id}
        </foreach>
  </if>
  <if test="userAddress != null">
     and  user.user_address = #{userAddress}
  </if>
  <if test="playHash != null">
     and  play_hash = #{playHash}
  </if>
  <if test="remark != null">
     and  remark like CONCAT('%', #{remark}, '%')
  </if>
  order by withdraw_record.id desc
  limit #{page},#{size}

</select>
<select id="manageWithdrawRecordTotal" resultType="java.lang.Integer">
  select count(1) from withdraw_record
  left join user
  on user.id = withdraw_record.user_id
  where 1=1
  <if test="ids != null">
     and  user_id in
      <foreach close=")" collection="ids" item="id" open="(" separator=",">
            #{id}
        </foreach>
  </if>
  <if test="userAddress != null">
     and  user.user_address = #{userAddress}
  </if>
  <if test="playHash != null">
     and  play_hash = #{playHash}
  </if>
  <if test="remark != null">
     and  remark like CONCAT('%', #{remark}, '%')
  </if>

</select>

  <delete id="deleteByUserId">
    delete from  pledge.withdraw_record where pledge.withdraw_record.user_id = #{userId}
    </delete>
</mapper>