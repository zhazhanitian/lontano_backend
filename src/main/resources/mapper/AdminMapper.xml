<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.pledge.envconsole.book.mapper.AdminMapper">
  <resultMap id="BaseResultMap" type="cn.pledge.envconsole.book.entity.Admin">
    <!--@mbg.generated-->
    <!--@Table `admin`-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="user_address" jdbcType="VARCHAR" property="userAddress" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, username, `password`, `role`, create_time, user_address, remark, parent_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from `admin`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from `admin`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.pledge.envconsole.book.entity.Admin" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `admin` (username, `password`, `role`, 
      create_time, user_address, remark, 
      parent_id)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{userAddress,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.pledge.envconsole.book.entity.Admin" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `admin`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="role != null">
        `role`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="userAddress != null">
        user_address,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userAddress != null">
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.pledge.envconsole.book.entity.Admin">
    <!--@mbg.generated-->
    update `admin`
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        `role` = #{role,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userAddress != null">
        user_address = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.pledge.envconsole.book.entity.Admin">
    <!--@mbg.generated-->
    update `admin`
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      `role` = #{role,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      user_address = #{userAddress,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="agencyAdminList" resultType="cn.pledge.envconsole.book.entity.Admin">
  select * from admin
  where role = 'agency'
  <if test="remark != null and remark != ''">
     and  remark like CONCAT('%', #{remark}, '%')
  </if>
  <if test="userAddress != null and userAddress !=''">
     and  user_address like CONCAT('%', #{userAddress}, '%')
  </if>
  order by id desc
  limit #{page},#{size}
</select>
 <select id="agencyAdminTotal" resultType="java.lang.Integer">
  select count(1) from admin
  where role = 'agency'
  <if test="remark != null and remark != ''">
     and  remark like CONCAT('%', #{remark}, '%')
  </if>
  <if test="userAddress != null and userAddress !=''">
     and  user_address like CONCAT('%', #{userAddress}, '%')
  </if>

</select>

  <select id="employeeAdminList" resultMap="BaseResultMap">
    select * from admin
    where role = 'employee'
    <if test="parentId != null">
      and parent_id = #{parentId}
    </if>
    <if test="remark != null and remark != ''">
      and  remark like CONCAT('%', #{remark}, '%')
    </if>
    <if test="userAddress != null and userAddress !=''">
      and  user_address like CONCAT('%', #{userAddress}, '%')
    </if>
    order by id desc
    limit #{page},#{size}
  </select>

  <select id="employeeAdminTotal" resultType="java.lang.Integer">
    select count(1) from admin
    where role = 'employee'
    <if test="parentId != null">
      and parent_id = #{parentId}
    </if>
    <if test="remark != null and remark != ''">
      and  remark like CONCAT('%', #{remark}, '%')
    </if>
    <if test="userAddress != null and userAddress !=''">
      and  user_address like CONCAT('%', #{userAddress}, '%')
    </if>

  </select>


</mapper>